{"ast":null,"code":"var _jsxFileName = \"/Users/vepa/Desktop/Projet_PC3R/spotrend-quizzer/src/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [topPlayers, setTopPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchTopPlayers() {\n      try {\n        const response = await fetch('http://localhost:8000/topPlayers'); // Assure-toi que cet endpoint correspond à ce que ton serveur attend\n        if (!response.ok) {\n          throw new Error('Impossible de récupérer les meilleurs joueurs.');\n        }\n        const data = await response.json();\n        setTopPlayers(data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des meilleurs joueurs:', error);\n        // Ici, tu pourrais mettre en place une gestion d'erreur plus robuste\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchTopPlayers();\n  }, []);\n  const startQuiz = () => {\n    // Remplacer par la logique nécessaire, peut-être une vérification d'état de connexion ou autre\n    navigate('/quiz'); // Redirige vers le quiz\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SPOTTREND QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Classement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement des meilleurs joueurs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: topPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [player.pseudo, \" - \", player.scoreTotal]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startQuiz,\n      children: \"COMMENCER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"qnSztBXUVcAVT8N44W4jl3V/R3c=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","HomePage","_s","topPlayers","setTopPlayers","isLoading","setIsLoading","navigate","fetchTopPlayers","response","fetch","ok","Error","data","json","error","console","startQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","pseudo","scoreTotal","onClick","_c","$RefreshReg$"],"sources":["/Users/vepa/Desktop/Projet_PC3R/spotrend-quizzer/src/HomePage.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction HomePage() {\n  const [topPlayers, setTopPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchTopPlayers() {\n      try {\n        const response = await fetch('http://localhost:8000/topPlayers'); // Assure-toi que cet endpoint correspond à ce que ton serveur attend\n        if (!response.ok) {\n          throw new Error('Impossible de récupérer les meilleurs joueurs.');\n        }\n        const data = await response.json();\n        setTopPlayers(data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des meilleurs joueurs:', error);\n        // Ici, tu pourrais mettre en place une gestion d'erreur plus robuste\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchTopPlayers();\n  }, []);\n\n  const startQuiz = () => {\n    // Remplacer par la logique nécessaire, peut-être une vérification d'état de connexion ou autre\n    navigate('/quiz'); // Redirige vers le quiz\n  };\n\n  return (\n    <div className=\"main-page\">\n      <h1>SPOTTREND QUIZ</h1>\n      <h2>Classement</h2>\n      {isLoading ? (\n        <p>Chargement des meilleurs joueurs...</p>\n      ) : (\n        <ol>\n          {topPlayers.map((player, index) => (\n            <li key={index}>\n              {player.pseudo} - {player.scoreTotal}\n            </li>\n          ))}\n        </ol>\n      )}\n      <button onClick={startQuiz}>\n        COMMENCER\n      </button>\n    </div>\n  );\n}\n\nexport default HomePage;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,eAAeW,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;QAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;QACnE;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,aAAa,CAACS,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;QAC7E;MACF,CAAC,SAAS;QACRT,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;IAEAE,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBlB,SAAS,gBACRL,OAAA;MAAAmB,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1CvB,OAAA;MAAAmB,QAAA,EACGhB,UAAU,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5B1B,OAAA;QAAAmB,QAAA,GACGM,MAAM,CAACE,MAAM,EAAC,KAAG,EAACF,MAAM,CAACG,UAAU;MAAA,GAD7BF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eACDvB,OAAA;MAAQ6B,OAAO,EAAEZ,SAAU;MAAAE,QAAA,EAAC;IAE5B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CAlDQD,QAAQ;EAAA,QAGEH,WAAW;AAAA;AAAAgC,EAAA,GAHrB7B,QAAQ;AAoDjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}