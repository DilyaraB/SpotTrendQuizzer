{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QuizPage(){const[question,setQuestion]=useState(null);const[selectedChoice,setSelectedChoice]=useState(null);const[score,setScore]=useState(0);const[questionCount,setQuestionCount]=useState(0);const[isQuizComplete,setIsQuizComplete]=useState(false);const navigate=useNavigate();useEffect(()=>{if(!isQuizComplete&&questionCount<10){fetchQuestion();}else if(isQuizComplete){sendScoreToServer(score);}},[questionCount,isQuizComplete]);const fetchQuestion=async()=>{try{const response=await fetch('http://localhost:8080/generate-question');const data=await response.json();setQuestion(data);setSelectedChoice(null);// Réinitialiser pour la question suivante\n}catch(error){console.error('Problème lors de la récupération de la question',error);}};const handleChoice=choice=>{setSelectedChoice(choice);if(choice===question.answer&&selectedChoice===null){setScore(prevScore=>prevScore+1);}};const handleNextQuestion=()=>{if(questionCount<9){setQuestionCount(prevCount=>prevCount+1);}else{setIsQuizComplete(true);}setSelectedChoice(null);// Réinitialiser pour la question suivante\n};const getButtonClass=choice=>{if(selectedChoice===null)return\"choice-button\";if(choice===question.answer)return\"choice-button correct\";if(choice===selectedChoice)return\"choice-button incorrect\";return\"choice-button\";};const sendScoreToServer=async finalScore=>{const token=localStorage.getItem('userToken');try{const response=await fetch('http://localhost:8080/finish-quizz',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({score:finalScore})});if(!response.ok){throw new Error('Erreur lors de l\\'envoi du score');}// Redirection vers ResultPage avec le score comme état\nnavigate('/results',{state:{score:finalScore}});}catch(error){console.error('Erreur lors de l\\'envoi du score',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SpotTrend Quiz\"}),isQuizComplete?/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-complete\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quiz Termin\\xE9!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Votre score final: \",score]})]}):question&&/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"question-title\",children:\"Quel morceau a \\xE9t\\xE9 le plus stream\\xE9 ?\"}),/*#__PURE__*/_jsx(\"div\",{className:\"choices-container\",children:question.choices.map((choice,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleChoice(choice),className:getButtonClass(choice),disabled:selectedChoice!==null,children:choice},index))}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Question: \",questionCount+1,\" / 10\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",score]}),selectedChoice!==null&&/*#__PURE__*/_jsx(\"button\",{className:\"next-question-button\",onClick:handleNextQuestion,children:\"Question Suivante\"})]})]});}export default QuizPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","QuizPage","question","setQuestion","selectedChoice","setSelectedChoice","score","setScore","questionCount","setQuestionCount","isQuizComplete","setIsQuizComplete","navigate","fetchQuestion","sendScoreToServer","response","fetch","data","json","error","console","handleChoice","choice","answer","prevScore","handleNextQuestion","prevCount","getButtonClass","finalScore","token","localStorage","getItem","method","headers","concat","body","JSON","stringify","ok","Error","state","className","children","choices","map","index","onClick","disabled"],"sources":["/Users/vepa/Desktop/Projet_PC3R/spotrend-quizzer/src/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction QuizPage() {\n  const [question, setQuestion] = useState(null);\n  const [selectedChoice, setSelectedChoice] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isQuizComplete && questionCount < 10) {\n      fetchQuestion();\n    } else if (isQuizComplete) {\n      sendScoreToServer(score);\n    }\n  }, [questionCount, isQuizComplete]); \n\n  const fetchQuestion = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/generate-question');\n      const data = await response.json();\n      setQuestion(data);\n      setSelectedChoice(null); // Réinitialiser pour la question suivante\n    } catch (error) {\n      console.error('Problème lors de la récupération de la question', error);\n    }\n  };\n\n  const handleChoice = (choice) => {\n    setSelectedChoice(choice);\n    if (choice === question.answer && selectedChoice === null) { \n      setScore((prevScore) => prevScore + 1);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (questionCount < 9) {\n      setQuestionCount((prevCount) => prevCount + 1);\n    } else {\n      setIsQuizComplete(true);\n    }\n    setSelectedChoice(null); // Réinitialiser pour la question suivante\n  };\n\n  const getButtonClass = (choice) => {\n    if (selectedChoice === null) return \"choice-button\";\n    if (choice === question.answer) return \"choice-button correct\";\n    if (choice === selectedChoice) return \"choice-button incorrect\";\n    return \"choice-button\";\n  };\n\n  const sendScoreToServer = async (finalScore) => {\n    const token = localStorage.getItem('userToken');\n    try {\n      const response = await fetch('http://localhost:8080/finish-quizz', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ score: finalScore })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de l\\'envoi du score');\n      }\n      // Redirection vers ResultPage avec le score comme état\n      navigate('/results', { state: { score: finalScore } });\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du score', error);\n    }\n  };\n\n  return (\n    <div className=\"quiz-page\">\n      <h1>SpotTrend Quiz</h1>\n      {isQuizComplete ? (\n        <div className=\"quiz-complete\">\n          <h2>Quiz Terminé!</h2>\n          <p>Votre score final: {score}</p>\n        </div>\n      ) : (\n        question && (\n          <div className=\"question-container\">\n            <p className=\"question-title\">Quel morceau a été le plus streamé ?</p>\n            <div className=\"choices-container\">\n              {question.choices.map((choice, index) => (\n                <button\n                  key={index}\n                  onClick={() => handleChoice(choice)}\n                  className={getButtonClass(choice)}\n                  disabled={selectedChoice !== null}\n                >\n                  {choice}\n                </button>\n              ))}\n            </div>\n            <p>Question: {questionCount + 1} / 10</p>\n            <p>Score: {score}</p>\n            {selectedChoice !== null && (\n              <button className=\"next-question-button\" onClick={handleNextQuestion}>\n                Question Suivante\n              </button>\n            )}\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}