{"ast":null,"code":"var _jsxFileName = \"/Users/vepa/Desktop/Projet_PC3R/spotrend-quizzer/src/SignUpPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/SignUpPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUpPage() {\n  _s();\n  const navigate = useNavigate();\n  // État local pour stocker les valeurs des champs du formulaire\n  const [formData, setFormData] = useState({\n    pseudo: '',\n    password: ''\n  });\n\n  // Gère la mise à jour de l'état local lorsque les champs du formulaire changent\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Gère la soumission du formulaire\n  const handleSubmit = e => {\n    e.preventDefault();\n    signUp(formData.pseudo, formData.password).then(() => {\n      alert('Inscription réussie !');\n      navigate('/signin'); // Redirigez vers SignInPage\n    }).catch(error => {\n      console.error('Erreur lors de l\\'inscription:', error);\n      // Utiliser error.message pour obtenir le message d'erreur\n      alert(`${error.message}`);\n    });\n  };\n  async function signUp(pseudo, password) {\n    const response = await fetch('http://localhost:8080/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pseudo,\n        password\n      })\n    });\n    if (!response.ok) {\n      // Lire le texte de la réponse pour obtenir le message d'erreur\n      return response.text().then(text => Promise.reject(new Error(text || 'Échec de l\\'inscription')));\n    }\n    return await response.json();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pseudo\",\n          children: \"Pseudo :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pseudo\",\n          name: \"pseudo\",\n          value: formData.pseudo,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Mot de passe :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpPage, \"wtAa+1bXjodfXTu1+TM4RC3waiY=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","jsxDEV","_jsxDEV","SignUpPage","_s","navigate","formData","setFormData","pseudo","password","handleChange","e","name","value","target","handleSubmit","preventDefault","signUp","then","alert","catch","error","console","message","response","fetch","method","headers","body","JSON","stringify","ok","text","Promise","reject","Error","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/Users/vepa/Desktop/Projet_PC3R/spotrend-quizzer/src/SignUpPage.js"],"sourcesContent":["\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/SignUpPage.css';\n\nfunction SignUpPage() {\n  const navigate = useNavigate();\n  // État local pour stocker les valeurs des champs du formulaire\n  const [formData, setFormData] = useState({\n    pseudo: '',\n    password: '',\n  });\n\n  // Gère la mise à jour de l'état local lorsque les champs du formulaire changent\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // Gère la soumission du formulaire\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signUp(formData.pseudo, formData.password)\n      .then(() => {\n        alert('Inscription réussie !');\n        navigate('/signin'); // Redirigez vers SignInPage\n      })\n      .catch((error) => {\n        console.error('Erreur lors de l\\'inscription:', error);\n        // Utiliser error.message pour obtenir le message d'erreur\n        alert(`${error.message}`);\n      });\n};\n\nasync function signUp(pseudo, password) {\n  const response = await fetch('http://localhost:8080/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ pseudo, password }),\n  });\n  if (!response.ok) {\n    // Lire le texte de la réponse pour obtenir le message d'erreur\n    return response.text().then(text => Promise.reject(new Error(text || 'Échec de l\\'inscription')));\n  }\n  return await response.json();\n}\n\n  return (\n    <div className=\"signup-page\">\n      <h1>Inscription</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"pseudo\">Pseudo :</label>\n          <input\n            type=\"text\"\n            id=\"pseudo\"\n            name=\"pseudo\"\n            value={formData.pseudo}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Mot de passe :</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">S'inscrire</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUpPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}